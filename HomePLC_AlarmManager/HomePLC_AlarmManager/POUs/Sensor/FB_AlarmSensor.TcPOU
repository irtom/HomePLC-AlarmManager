<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_AlarmSensor" Id="{b70c0fc3-adeb-4f9c-974b-1c2e4d76696e}" SpecialFunc="None">
    <Declaration><![CDATA[// Alarm sensor FB
FUNCTION_BLOCK FB_AlarmSensor IMPLEMENTS I_AlarmSensor
VAR
	sName					: STRING;				// Sensor name
	nID						: INT;					// Alarm component ID
	bWarnFirst				: BOOL;					// Set to true to warn the user before setting off the alarm
	bDisable		AT %I*	: BOOL;					// Set to true to disable the sensor (can be set externally)
	
	ibAlarm			AT %I*	: BOOL;					// Active low alarm input
	ibTamper		AT %I*	: BOOL;					// Active low tamper input
	
	bAlarm					: BOOL;					// True if the sensor detects something
	bTamper					: BOOL;					// True if the sensor is tampered with
	
	bAlarmTrigger			: BOOL;					// Returns true when the sensor is triggered
	bTamperTrigger			: BOOL;					// Returns true when the sensor is tampered with
	
	aOutputOnDetect			: ARRAY [0..9] OF I_DigitalOut;	// Digital outputs to turn on when sensor is triggered
	nOutputOnDetect			: INT;					// Number of digitial outputs in aOutputOnDetect
	
	stHMI					: ST_AlarmSensorHMI;	// HMI data
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{51ed284b-55ce-458c-9d89-521a2a263c5a}" />
    <Folder Name="Properties" Id="{c1a533fb-ae32-4976-947d-2ef3acce91e4}" />
    <Method Name="AddOutputOnDetect" Id="{febdc597-29ff-48e6-a464-482ef2b996a6}" FolderPath="Methods\">
      <Declaration><![CDATA[// Add a digital output to turn on when the sensor is triggered
METHOD AddOutputOnDetect
VAR_INPUT
	IDO		: I_DigitalOut;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[aOutputOnDetect[nOutputOnDetect] := IDO;
nOutputOnDetect := nOutputOnDetect + 1;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Alarm" Id="{dc64478c-441d-49da-8224-efa81b6d9483}" FolderPath="Properties\">
      <Declaration><![CDATA[// Returns true if the sensor detects something (as long as something is detected)
PROPERTY Alarm : BOOL]]></Declaration>
      <Get Name="Get" Id="{0272ca24-d09e-4e5b-9b48-31f9e8b81725}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Alarm := bAlarm;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="AlarmTrigger" Id="{12666827-13e2-4f8c-9bf9-2a8a411f7a47}" FolderPath="Properties\">
      <Declaration><![CDATA[// Returns true when the sensor is triggered (one cycle)
PROPERTY AlarmTrigger : BOOL]]></Declaration>
      <Get Name="Get" Id="{f6a62fa3-d0aa-45ff-b344-75a4803e9461}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[AlarmTrigger := bAlarmTrigger;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Execute" Id="{0f046a5a-16a3-4b62-b056-a50c4fc1278a}" FolderPath="Methods\">
      <Declaration><![CDATA[// Run this method every cycle
METHOD Execute
VAR_INST
	fbAlarm		: R_TRIG;		// Alarm rising trigger
	fbTamper	: R_TRIG;		// Tamper rising trigger
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Check if disabled
IF NOT bDisable THEN
	// Convert active low inputs
	bAlarm := NOT ibAlarm;
	bTamper := NOT ibTamper;
END_IF

// Run FBs
fbAlarm(CLK := bAlarm);
fbTamper(CLK := bTamper);

// Check triggers
bAlarmTrigger := fbAlarm.Q;
bTamperTrigger := fbTamper.Q;

// Update HMI
UpdateHMI();]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{ff1dc40c-1996-4aae-aa5c-8b8b146a64eb}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains	: BOOL;		// if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode		: BOOL;		// if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	sSensorName		: STRING;	// Sensor name
	nSensorID		: INT;		// Sensor ID
	bEnableWarning	: BOOL;		// Set to true to warn the user before setting off the alarm
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[sName := sSensorName;
nID := nSensorID;
bWarnFirst := bEnableWarning;]]></ST>
      </Implementation>
    </Method>
    <Property Name="HmiData" Id="{11eea628-f2e6-4a99-a31a-35cef36b6bfd}" FolderPath="Properties\">
      <Declaration><![CDATA[// Returns the HMI data
PROPERTY HmiData : ST_AlarmSensorHMI]]></Declaration>
      <Get Name="Get" Id="{62f261ad-958a-4521-9634-bca43aa5fca2}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[HmiData := stHMI;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ID" Id="{2b131cc5-68f4-47ea-996b-1741c668fec3}" FolderPath="Properties\">
      <Declaration><![CDATA[// Get the alarm component ID of the sensor
PROPERTY ID : INT]]></Declaration>
      <Get Name="Get" Id="{d94e6bc9-789d-4574-bf17-ba645a08e35a}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ID := nID;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="OutputsOnDetect" Id="{e8df4108-c9a5-4faf-975a-d488559b5a42}" FolderPath="Properties\">
      <Declaration><![CDATA[// Gets the outputs to turn on when the sensor is triggered
PROPERTY OutputsOnDetect : ARRAY [0..9] OF I_DigitalOut]]></Declaration>
      <Get Name="Get" Id="{927f9a6f-69a8-4b3c-8e22-bd70562a4872}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[OutputsOnDetect := aOutputOnDetect;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="OutputsOnDetectSize" Id="{a90fccba-a840-4fc5-988c-2098fcd06383}" FolderPath="Properties\">
      <Declaration><![CDATA[// Number of outputs to enable when the sensor is triggered
PROPERTY OutputsOnDetectSize : INT]]></Declaration>
      <Get Name="Get" Id="{cd69a907-c441-4517-a3d3-92980aeaeb77}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[OutputsOnDetectSize := nOutputOnDetect;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SetDisableState" Id="{82418202-2a3f-4e87-ba0a-b243d311464a}" FolderPath="Methods\">
      <Declaration><![CDATA[// Set the sensor disable state
METHOD SetDisableState
VAR_INPUT
	bDisable	: BOOL;		// Set to true to disable the sensor
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.bDisable := bDisable;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Tamper" Id="{a2a0dd8d-69b1-4bb6-a23a-ef712e963b3a}" FolderPath="Properties\">
      <Declaration><![CDATA[// Returns true when the sensor is tampered with (as long as the sensor is tampered with)
PROPERTY Tamper : BOOL]]></Declaration>
      <Get Name="Get" Id="{615b5d68-2aab-4f4c-9b3f-662b04191962}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Tamper := bTamper;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="TamperTrigger" Id="{eb07d766-9369-49d4-b8a5-9ec5e976e5da}" FolderPath="Properties\">
      <Declaration><![CDATA[// Returns true when the tamper sensor is triggered (one cycle)
PROPERTY TamperTrigger : BOOL]]></Declaration>
      <Get Name="Get" Id="{39814ef7-3c13-42fe-a6cb-dd65a495ad1d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[TamperTrigger := bTamperTrigger;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="UpdateHMI" Id="{2a73659b-cde5-47f2-97a4-eb437262e9fa}" FolderPath="Methods\">
      <Declaration><![CDATA[// Update HMI
METHOD PRIVATE UpdateHMI]]></Declaration>
      <Implementation>
        <ST><![CDATA[stHMI.sName := sName;
stHMI.nID := nID;
stHMI.bAlarm := bAlarm;
stHMI.bTamper := bTamper;
stHMI.bDisabled := bDisable;]]></ST>
      </Implementation>
    </Method>
    <Property Name="WarnFirst" Id="{8b5a5135-7729-4535-8e9c-5ce7d3db4bc8}" FolderPath="Properties\">
      <Declaration><![CDATA[// Returs true if the user is warned before the alarm is set off
PROPERTY WarnFirst : BOOL]]></Declaration>
      <Get Name="Get" Id="{e88c85de-9f8d-444d-973e-afb2649b79d6}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[WarnFirst := bWarnFirst;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>